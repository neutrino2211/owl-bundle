'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = parseNewTree;

var _caches = require('../util/caches');

var _parse = require('../util/parse');

var _parse2 = _interopRequireDefault(_parse);

var _create = require('../tree/create');

var _create2 = _interopRequireDefault(_create);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parseNewTree(transaction) {
  const { state, markup, options } = transaction;
  const { measure } = state;
  const { inner } = options;

  if (typeof markup === 'string') {
    measure('parsing markup for new tree');

    const { childNodes } = (0, _parse2.default)(markup, null, options);

    // If we are dealing with innerHTML, use all the Nodes. If we're dealing
    // with outerHTML, we can only support diffing against a single element,
    // so pick the first one, if there are none, just pass the entire root.
    transaction.newTree = (0, _create2.default)(inner ? childNodes : childNodes[0] || childNodes);

    measure('parsing markup for new tree');
  }
}
module.exports = exports['default'];